{
  "name": "robot-api",
  "version": "1.0.0",
  "license": "MIT",
  "repository": "tue-robotics/robot-api",
  "author": {
    "name": "Ramon Wijnands",
    "email": "rayman747@hotmail.com",
    "url": "https://github.com/Rayman"
  },
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "files": [
    "lib/",
    "dist/"
  ],
  "scripts": {
    "lint": "xo",
    "clean": "rimraf dist/",
    "deps": "npm run deps:missing && npm run deps:extra",
    "deps:missing": "dependency-check . --missing",
    "deps:extra": "dependency-check . --extra --no-dev",
    "prebuild": "npm run clean && npm run lint",
    "build": "npm run build_cjs && npm run build_esm",
    "postbuild": "npm run deps",
    "build_cjs": "cross-env BABEL_ENV=cjs babel lib/ --out-dir dist/cjs/ --source-maps",
    "build_esm": "cross-env BABEL_ENV=esm babel lib/ --out-dir dist/esm/ --source-maps",
    "test": "cross-env BABEL_ENV=cjs mocha --require @babel/register test/**/*.test.js",
    "coverage": "cross-env NODE_ENV=test nyc mocha test/**/*.test.js",
    "version": "npm run build",
    "patch": "npm version patch",
    "minor": "npm version minor",
    "major": "npm version major",
    "postversion": "git push && git push --tags"
  },
  "nyc": {
    "require": [
      "@babel/register"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "devDependencies": {
    "@babel/cli": "^7.24.1",
    "@babel/core": "^7.24.0",
    "@babel/eslint-parser": "^7.24.1",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-transform-classes": "^7.24.1",
    "@babel/preset-env": "^7.24.0",
    "@babel/register": "^7.24.6",
    "babel-plugin-istanbul": "^6.1.1",
    "chai": "^4.4.0",
    "cross-env": "^7.0.0",
    "dependency-check": "^4.1.0",
    "mocha": "^10.4.0",
    "nyc": "^15.1.0",
    "rimraf": "^5.0.0",
    "sinon": "^18.0.0",
    "sinon-chai": "^3.7.0",
    "xo": "^0.56.0"
  },
  "dependencies": {
    "eventemitter2": "^6.4.5",
    "lodash": "^4.17.0",
    "roslib": "^1.4.1"
  },
  "xo": {
    "parser": "@babel/eslint-parser",
    "space": true,
    "envs": [
      "mocha"
    ],
    "ignores": [
      "dist/**",
      "lib/graveyard/*"
    ],
    "rules": {
      "capitalized-comments": "off",
      "no-unused-expressions": [
        2,
        {
          "allowShortCircuit": true
        }
      ],
      "new-cap": [
        "error",
        {
          "capIsNewExceptions": [
            "ActionClient",
            "Service",
            "Topic"
          ]
        }
      ]
    },
    "overrides": [
      {
        "files": "test/*.js",
        "rules": {
          "import/extensions": "off"
        }
      }
    ]
  }
}
