{
  "name": "robot-api",
  "version": "0.10.0",
  "license": "MIT",
  "repository": "tue-robotics/robot-api",
  "author": {
    "name": "Ramon Wijnands",
    "email": "rayman747@hotmail.com",
    "url": "https://github.com/Rayman"
  },
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "files": [
    "lib/",
    "dist/"
  ],
  "scripts": {
    "lint": "xo",
    "clean": "rimraf dist/",
    "deps": "npm run deps:missing && npm run deps:extra",
    "deps:missing": "dependency-check .",
    "deps:extra": "dependency-check . --extra --no-dev",
    "prebuild": "npm run clean && npm run lint",
    "build": "npm run build_cjs && npm run build_esm",
    "postbuild": "npm run deps",
    "build_cjs": "cross-env BABEL_ENV=cjs babel lib/ --out-dir dist/cjs/ --source-maps",
    "build_esm": "cross-env BABEL_ENV=esm babel lib/ --out-dir dist/esm/ --source-maps",
    "test": "cross-env BABEL_ENV=cjs mocha --require babel-register test/**/*.test.js",
    "coverage": "cross-env NODE_ENV=test nyc mocha test/**/*.test.js",
    "version": "npm run build",
    "patch": "npm version patch && npm publish",
    "minor": "npm version minor && npm publish",
    "major": "npm version major && npm publish",
    "postpublish": "git push && git push --tags"
  },
  "nyc": {
    "require": [
      "babel-register"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.0.3",
    "babel-plugin-istanbul": "^4.1.5",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-env": "^1.6.1",
    "babel-register": "^6.26.0",
    "chai": "^4.1.2",
    "cross-env": "^5.1.1",
    "dependency-check": "^2.9.1",
    "mocha": "^4.0.1",
    "nyc": "^11.3.0",
    "rimraf": "^2.6.2",
    "sinon": "^4.1.1",
    "sinon-chai": "^2.14.0",
    "xo": "^0.18.2"
  },
  "dependencies": {
    "eventemitter2": "^4.1.2",
    "lodash": "^4.17.13",
    "roslib": "^0.19.0"
  },
  "xo": {
    "parser": "babel-eslint",
    "space": true,
    "envs": [
      "mocha"
    ],
    "ignores": [
      "dist/**",
      "lib/graveyard/*"
    ],
    "rules": {
      "capitalized-comments": "off",
      "no-unused-expressions": [
        2,
        {
          "allowShortCircuit": true
        }
      ],
      "new-cap": [
        "error",
        {
          "capIsNewExceptions": [
            "ActionClient",
            "Service",
            "Topic"
          ]
        }
      ]
    }
  }
}
